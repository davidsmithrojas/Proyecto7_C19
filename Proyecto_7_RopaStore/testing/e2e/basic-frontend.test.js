const { test, expect } = require('@playwright/test');

test.describe('üîç Verificaci√≥n B√°sica del Frontend', () => {
  test('‚úÖ Deber√≠a cargar la p√°gina principal', async ({ page }) => {
    await page.goto('http://localhost:3000');
    
    // Verificar que la p√°gina carga
    await expect(page).toHaveTitle(/E-commerce/);
    
    // Verificar que hay contenido en la p√°gina
    await expect(page.locator('body')).toBeVisible();
  });

  test('‚úÖ Deber√≠a mostrar elementos b√°sicos de navegaci√≥n', async ({ page }) => {
    await page.goto('http://localhost:3000');
    
    // Esperar a que la p√°gina cargue completamente
    await page.waitForLoadState('networkidle');
    
    // Verificar que hay elementos de navegaci√≥n
    const navigation = page.locator('nav');
    await expect(navigation).toBeVisible();
    
    // Verificar que hay enlaces de navegaci√≥n
    const links = page.locator('a');
    const linkCount = await links.count();
    expect(linkCount).toBeGreaterThan(0);
  });

  test('‚úÖ Deber√≠a poder acceder a la p√°gina de login', async ({ page }) => {
    await page.goto('http://localhost:3000');
    
    // Buscar enlace de login
    const loginLink = page.locator('a[href="/login"]');
    await expect(loginLink).toBeVisible();
    
    // Hacer clic en login
    await loginLink.click();
    
    // Verificar que estamos en la p√°gina de login
    await expect(page).toHaveURL(/.*login/);
  });

  test('‚úÖ Deber√≠a poder acceder a la p√°gina de registro', async ({ page }) => {
    await page.goto('http://localhost:3000');
    
    // Buscar enlace de registro
    const registerLink = page.locator('a[href="/register"]');
    await expect(registerLink).toBeVisible();
    
    // Hacer clic en registro
    await registerLink.click();
    
    // Verificar que estamos en la p√°gina de registro
    await expect(page).toHaveURL(/.*register/);
  });
});
